package CS;

import java.io.FileOutputStream;
import java.util.Date;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
        
public class PdfConverter {
   
    private static String FILE;
    
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

    public void setFile(String FILE) {
        this.FILE = FILE + ".pdf";
    }
    
    public double discount(double selectedDiscount) {
        if (selectedDiscount == 25)
            return 0.75;
        else if (selectedDiscount == 50)
            return 0.5;
        else if (selectedDiscount == 75)
            return 0.25;
        else if (selectedDiscount == 0)
            return 1;
        else
            return 0;
    }
    
    public static String catName;
    public static String catDesc;
    public static String cDate;
    
    public void setStuff(String catName, String catDesc, String cDate) {
        this.catName = catName;
        this.catDesc = catDesc;
        this.cDate = cDate;
    }
    
    public static double disc;
    public void main(double selectedDisount) {
        disc = discount(selectedDisount);
        try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            addMetaData(document);
            addTitlePage(document);
            addContent(document);
            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document) {
        document.addTitle("Catalog");
        document.addSubject("Catalog");
        document.addKeywords("Java, PDF, Catalog");
        document.addAuthor("Catalog System");
        document.addCreator("Catalog System");
    }

    private static void addTitlePage(Document document)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph("Catalog", catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph("Catalog generated by: " + System.getProperty("user.name") + ", " + new Date(),smallBold));
        addEmptyLine(preface, 3);
        preface.add(new Paragraph("Catalog name: " + catName + "\nCatalog Description: " + catDesc + "\nCreation Date: " + cDate,smallBold));

        addEmptyLine(preface, 8);

        document.add(preface);
        // Start a new page
        document.newPage();
    }

    private static void addContent(Document document) throws DocumentException {
        Anchor anchor = new Anchor("Items", catFont);

        // Second parameter is the number of the chapter
        Chapter catPart = new Chapter(new Paragraph(anchor), 1);

        // add a table
        createTable(catPart);

        // now add all this to the document
        document.add(catPart);
        
    }

    private static void createTable(Section catPart)
            throws BadElementException {
        
        PdfPTable table = new PdfPTable(6);

        PdfPCell c1 = new PdfPCell(new Phrase("Item ID"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Name"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Brand"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        
        c1 = new PdfPCell(new Phrase("Price"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        
        c1 = new PdfPCell(new Phrase("Supplier"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        
        c1 = new PdfPCell(new Phrase("Category"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        
        table.setHeaderRows(1);
        catPart.add(table);
        Product prod = new Product();
        ArrayList<Product> list = prod.listProducts();

        
        for (int i = 0; i < list.size(); i++) {
            table.addCell(list.get(i).itemID);
            table.addCell(list.get(i).itemName);
            table.addCell(list.get(i).brand);
            double a = list.get(i).price;
            a = a * disc;
            table.addCell(Double.toString(a));
            table.addCell(list.get(i).supplierName);
            table.addCell(list.get(i).itemCategory);
            
        }

    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}